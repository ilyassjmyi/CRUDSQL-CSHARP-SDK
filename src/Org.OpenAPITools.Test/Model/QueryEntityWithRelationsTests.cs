/*
 * CrudSQL API
 *
 * A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models CrudSQL provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger documentation - Multiple database support (SQL & NoSQL)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: taqi@mobix.biz
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing QueryEntityWithRelations
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class QueryEntityWithRelationsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for QueryEntityWithRelations
        //private QueryEntityWithRelations instance;

        public QueryEntityWithRelationsTests()
        {
            // TODO uncomment below to create an instance of QueryEntityWithRelations
            //instance = new QueryEntityWithRelations();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of QueryEntityWithRelations
        /// </summary>
        [Fact]
        public void QueryEntityWithRelationsInstanceTest()
        {
            // TODO uncomment below to test "IsType" QueryEntityWithRelations
            //Assert.IsType<QueryEntityWithRelations>(instance);
        }

        /// <summary>
        /// Test the property 'MainEntity'
        /// </summary>
        [Fact]
        public void MainEntityTest()
        {
            // TODO unit test for the property 'MainEntity'
        }

        /// <summary>
        /// Test the property 'Relations'
        /// </summary>
        [Fact]
        public void RelationsTest()
        {
            // TODO unit test for the property 'Relations'
        }
    }
}
